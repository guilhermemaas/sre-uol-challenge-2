name: ci

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
  
env:
  run_id: ${GITHUB_RUN_NUMBER}

jobs:
  pytest:
    name: Unit testing Pytest
    strategy:
      matrix:
        python-version: [3.10.9]
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configuração do Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Instalação de dependências
        run: |
          python -m pip install --upgrade pip
          cd app
          pip install -r requirements.txt

      - name: Testes unitários
        run: |
          cd app
          python -m pytest
          echo ${{ env.run_id }}
                  
  coverage:
    name: Code Coverage
    needs: pytest
    strategy:
      matrix:
        python-version: [3.10.9]
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configuração do Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Instalação de dependências
        run: |
          python -m pip install --upgrade pip
          cd app
          pip install -r requirements.txt

      - name: Generate Coverage Report
        run: |
          cd app
          coverage run -m pytest
          coverage report --omit=tests/conftest.py,tests/test_app.py


  build:
    name: Build and Push Docker Image
    needs: 
      - pytest
      - coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker Hub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and Push
        uses: docker/build-push-action@v3
        with:
          context: ./app/
          file: ./app/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/github-api:latest 

  helm:
    name: Helm Chart
    needs:
      - pytest
      - coverage
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Publish Helm Chart
        uses: stefanprodan/helm-gh-pages@master
        with:
          token: ${{ secrets.BOT_GITHUB_TOKEN }}
          charts_dir: k8s/
          repository: gmaas-github-api 
          branch: gh-pages
          target_dir: charts/
          commit_username: guilhermemaas
          commit_email: guilherme.maas@gmail.com
          app_version: 1.0.${{ env.run_id }}
          chart_version: 1.0.${{ env.run_id }}