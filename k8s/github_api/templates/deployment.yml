apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}
spec:
  {{- with .Values.container }}
  replicas: {{ .replicas }}
  selector:
    matchLabels:
      app: {{ $.Release.Name }}
  template:
    metadata:
      name: {{ $.Release.Name }}
      labels:
        app: {{ $.Release.Name }}
      {{- if eq $.Values.prometheus.enabled true }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "5000"
      {{- end }}
    spec:
      containers:
      - name: {{ $.Release.Name }}
        image: gmaas2/github-api:latest
        imagePullPolicy: {{ .imagePullPolicy }}
        {{- if eq .livenessProbe.enabled true }}
        livenessProbe:
          httpGet:
            path: {{ .livenessProbe.httpGet.path }}
            port: {{ .livenessProbe.httpGet.port }}
            scheme: {{ .livenessProbe.httpGet.Scheme }}
          timeoutSeconds: {{ .livenessProbe.timeoutSeconds }}
          failureThreshold: {{ .livenessProbe.failureThreshold }}
          periodSeconds: {{ .livenessProbe.periodSeconds }} #Default 60. Esse tempo de 300 seg é por conta do Rate Limit da API do Github. A ideia é não bloquear o acesso.
          successThreshold: {{ .livenessProbe.successThreshold }}
          initialDelaySeconds: {{ .livenessProbe.initialDelaySeconds }}
        {{- end }}
        {{- if eq .readinessProbe.enabled true }}
        readinessProbe:
          httpGet:
            path: {{ .readinessProbe.httpGet.path }}
            port: {{ .readinessProbe.httpGet.port }}
            scheme: {{ .readinessProbe.httpGet.scheme }}
          timeoutSeconds: {{ .readinessProbe.timeoutSeconds }}
          failureThreshold: {{ .readinessProbe.failureThreshold }}
          periodSeconds: {{ .readinessProbe.periodSeconds }}
          successThreshold: {{ .readinessProbe.successThreshold }}
          initialDelaySeconds: {{ .readinessProbe.initialDelaySeconds }}
        {{- end }}
        envFrom:
        - configMapRef:
            name: {{ $.Release.Name }}
        ports:
        {{- range .ports }}
        -  name: {{ .name }}
           containerPort: {{ .containerPort }}      
        {{- end }}
        {{- if eq .resources.enabled true }}      
        resources:
          limits:
            memory: {{ .resources.limits.memory }}
            cpu: {{ .resources.limits.cpu }}
        {{- end }}
  {{- end }}